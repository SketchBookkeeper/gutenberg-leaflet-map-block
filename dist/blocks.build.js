/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, {
/******/ 				configurable: false,
/******/ 				enumerable: true,
/******/ 				get: getter
/******/ 			});
/******/ 		}
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 0);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/*!***********************!*\
  !*** ./src/blocks.js ***!
  \***********************/
/*! no exports provided */
/*! all exports used */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("Object.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__block_block_js__ = __webpack_require__(/*! ./block/block.js */ 1);\n/**\n * Gutenberg Blocks\n *\n * All blocks related JavaScript files should be imported here.\n * You can create a new block folder in this dir and include code\n * for that block here as well.\n *\n * All blocks should be included here since this is the file that\n * Webpack is compiling as the input file.\n */\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMC5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL3NyYy9ibG9ja3MuanM/N2I1YiJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEd1dGVuYmVyZyBCbG9ja3NcbiAqXG4gKiBBbGwgYmxvY2tzIHJlbGF0ZWQgSmF2YVNjcmlwdCBmaWxlcyBzaG91bGQgYmUgaW1wb3J0ZWQgaGVyZS5cbiAqIFlvdSBjYW4gY3JlYXRlIGEgbmV3IGJsb2NrIGZvbGRlciBpbiB0aGlzIGRpciBhbmQgaW5jbHVkZSBjb2RlXG4gKiBmb3IgdGhhdCBibG9jayBoZXJlIGFzIHdlbGwuXG4gKlxuICogQWxsIGJsb2NrcyBzaG91bGQgYmUgaW5jbHVkZWQgaGVyZSBzaW5jZSB0aGlzIGlzIHRoZSBmaWxlIHRoYXRcbiAqIFdlYnBhY2sgaXMgY29tcGlsaW5nIGFzIHRoZSBpbnB1dCBmaWxlLlxuICovXG5cbmltcG9ydCAnLi9ibG9jay9ibG9jay5qcyc7XG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9zcmMvYmxvY2tzLmpzXG4vLyBtb2R1bGUgaWQgPSAwXG4vLyBtb2R1bGUgY2h1bmtzID0gMCJdLCJtYXBwaW5ncyI6IkFBQUE7QUFBQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///0\n");

/***/ }),
/* 1 */
/*!****************************!*\
  !*** ./src/block/block.js ***!
  \****************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__style_scss__ = __webpack_require__(/*! ./style.scss */ 2);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__style_scss___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__style_scss__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__editor_scss__ = __webpack_require__(/*! ./editor.scss */ 3);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__editor_scss___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1__editor_scss__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_leaflet_control_geocoder_dist_Control_Geocoder_css__ = __webpack_require__(/*! leaflet-control-geocoder/dist/Control.Geocoder.css */ 4);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_leaflet_control_geocoder_dist_Control_Geocoder_css___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2_leaflet_control_geocoder_dist_Control_Geocoder_css__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_leaflet_control_geocoder_dist_images_geocoder_png__ = __webpack_require__(/*! leaflet-control-geocoder/dist/images/geocoder.png */ 5);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_leaflet_control_geocoder_dist_images_geocoder_png___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_3_leaflet_control_geocoder_dist_images_geocoder_png__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_leaflet_control_geocoder_dist_images_throbber_gif__ = __webpack_require__(/*! leaflet-control-geocoder/dist/images/throbber.gif */ 6);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_leaflet_control_geocoder_dist_images_throbber_gif___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_4_leaflet_control_geocoder_dist_images_throbber_gif__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_leaflet_control_geocoder__ = __webpack_require__(/*! leaflet-control-geocoder */ 7);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_leaflet_control_geocoder___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_5_leaflet_control_geocoder__);\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n/**\n * BLOCK: gutenberg-leaflet-map-block\n *\n * Registering a basic block with Gutenberg.\n *\n * Wishlist Options\n *\n * - Custom Colors\n * - Custom Markers\n * - Location, click or lookup\n * - Zoom level\n * - Map Height and Width\n * - Static?\n *\n */\n\n//  Import CSS.\n\n\n\n// Geocoder\n\n\n\n\n\nvar pluginUrl = window.gutenberg_leaflet_map_block.plugin_url;\nvar __ = wp.i18n.__; // Import __() from wp.i18n\n\nvar registerBlockType = wp.blocks.registerBlockType; // Import registerBlockType() from wp.blocks\n\nvar _wp$editor = wp.editor,\n    InspectorControls = _wp$editor.InspectorControls,\n    MediaUpload = _wp$editor.MediaUpload;\nvar _wp$element = wp.element,\n    Component = _wp$element.Component,\n    Fragment = _wp$element.Fragment;\nvar _wp$components = wp.components,\n    Button = _wp$components.Button,\n    Dashicon = _wp$components.Dashicon,\n    PanelBody = _wp$components.PanelBody,\n    ColorPalette = _wp$components.ColorPalette,\n    Placeholder = _wp$components.Placeholder,\n    RangeControl = _wp$components.RangeControl,\n    SelectControl = _wp$components.SelectControl,\n    Spinner = _wp$components.Spinner,\n    TextControl = _wp$components.TextControl,\n    ToggleControl = _wp$components.ToggleControl,\n    Notice = _wp$components.Notice,\n    IconButton = _wp$components.IconButton;\n\n/**\n * Register: a Gutenberg Block.\n *\n * Registers a new block provided a unique name and an object defining its\n * behavior. Once registered, the block is made editor as an option to any\n * editor interface where blocks are implemented.\n *\n * @link https://wordpress.org/gutenberg/handbook/block-api/\n * @param  {string}   name     Block name.\n * @param  {Object}   settings Block settings.\n * @return {?WPBlock}          The block, if it has been successfully\n *                             registered; otherwise `undefined`.\n */\n\nregisterBlockType('gutenberg-leaflet-map-block/block-gutenberg-leaflet-map-block', {\n\t// Block name. Block names must be string that contains a namespace prefix. Example: my-plugin/my-custom-block.\n\ttitle: __('Leaflet Map'), // Block title.\n\ticon: 'location', // Block icon from Dashicons → https://developer.wordpress.org/resource/dashicons/.\n\tcategory: 'embed', // Block category — Group blocks together based on common traits E.g. common, formatting, layout widgets, embed.\n\tkeywords: [__('Map'), __('Leaflet JS')],\n\n\tattributes: {\n\t\tmapLatLng: {\n\t\t\ttype: 'array',\n\t\t\tdefault: [51.505, -0.09]\n\t\t},\n\t\tmarkerLatLng: {\n\t\t\ttype: 'array',\n\t\t\tdefault: [51.505, -0.09]\n\t\t},\n\t\taddress: {\n\t\t\ttype: 'string',\n\t\t\tdefault: 'London, Greater London, England, United Kingdom'\n\t\t},\n\t\theight: {\n\t\t\ttype: 'integer',\n\t\t\tdefault: 300\n\t\t},\n\t\tzoom: {\n\t\t\ttype: 'integer',\n\t\t\tdefault: 12\n\t\t},\n\t\tmapContainerBackground: {\n\t\t\ttype: 'string',\n\t\t\tdefault: '#67B6E3'\n\t\t},\n\t\tcustomIconID: {\n\t\t\ttype: 'integer'\n\t\t},\n\t\tcustomIconURL: {\n\t\t\ttype: 'string'\n\t\t},\n\t\tcustomIconWidth: {\n\t\t\ttype: 'integer'\n\t\t},\n\t\tcustomIconHeight: {\n\t\t\ttype: 'integer'\n\t\t}\n\t},\n\n\tedit: function edit(props) {\n\t\treturn new mapBlock(props);\n\t},\n\n\tsave: function save(props) {\n\t\treturn wp.element.createElement('div', { 'data-gutenberg-leaflet-map-block': '{ \"maxZoom\": 18, \"id\": \"mapbox.streets\" }' });\n\t}\n});\n\n/**\n * Edit\n */\n\nvar mapBlock = function (_Component) {\n\t_inherits(mapBlock, _Component);\n\n\tfunction mapBlock(props) {\n\t\t_classCallCheck(this, mapBlock);\n\n\t\tvar _this = _possibleConstructorReturn(this, (mapBlock.__proto__ || Object.getPrototypeOf(mapBlock)).call(this, props));\n\n\t\t_this.mapContainer = React.createRef();\n\t\t_this.mapboxApiKey = window.gutenberg_leaflet_map_block.mapbox_api_key;\n\n\t\t_this.state = {\n\t\t\ticonError: false\n\t\t};\n\n\t\t_this.showIconError.bind(_this);\n\t\t_this.hideIconError.bind(_this);\n\t\treturn _this;\n\t}\n\n\t//\n\t// State Management\n\t//\n\n\n\t_createClass(mapBlock, [{\n\t\tkey: 'showIconError',\n\t\tvalue: function showIconError() {\n\t\t\tthis.setState({ iconError: true });\n\t\t}\n\t}, {\n\t\tkey: 'hideIconError',\n\t\tvalue: function hideIconError() {\n\t\t\tthis.setState({ iconError: false });\n\t\t}\n\n\t\t//\n\t\t// Update Methods\n\t\t//\n\n\t}, {\n\t\tkey: 'updateAddress',\n\t\tvalue: function updateAddress(value) {\n\t\t\tthis.props.setAttributes({\n\t\t\t\taddress: value\n\t\t\t});\n\t\t}\n\t}, {\n\t\tkey: 'updateMapLatlng',\n\t\tvalue: function updateMapLatlng(value) {\n\t\t\tthis.props.setAttributes({\n\t\t\t\tmapLatLng: value\n\t\t\t});\n\t\t}\n\t}, {\n\t\tkey: 'updateMarkerLatlng',\n\t\tvalue: function updateMarkerLatlng(value) {\n\t\t\tthis.props.setAttributes({\n\t\t\t\tmarkerLatLng: value\n\t\t\t});\n\t\t}\n\t}, {\n\t\tkey: 'updateLocation',\n\t\tvalue: function updateLocation(latlng, address) {\n\t\t\t// Update multiple at once for expected responses from the\n\t\t\t// forward and back buttons in the Gutenberg UI.\n\t\t\tthis.props.setAttributes({\n\t\t\t\tmarkerLatLng: latlng,\n\t\t\t\tmapLatLng: latlng,\n\t\t\t\taddress: address\n\t\t\t});\n\t\t}\n\t}, {\n\t\tkey: 'updateIcon',\n\t\tvalue: function updateIcon(icon) {\n\t\t\tthis.props.setAttributes({\n\t\t\t\tcustomIconID: icon.id,\n\t\t\t\tcustomIconURL: icon.url,\n\t\t\t\tcustomIconWidth: icon.width,\n\t\t\t\tcustomIconHeight: icon.height\n\t\t\t});\n\t\t}\n\t}, {\n\t\tkey: 'removeIcon',\n\t\tvalue: function removeIcon() {\n\t\t\tthis.props.setAttributes({\n\t\t\t\tcustomIconID: null,\n\t\t\t\tcustomIconURL: null,\n\t\t\t\tcustomIconWidth: null,\n\t\t\t\tcustomIconHeight: null\n\t\t\t});\n\t\t}\n\t}, {\n\t\tkey: 'validateIcon',\n\t\tvalue: function validateIcon(icon) {\n\t\t\tif (icon.mime !== 'image/png' || icon.height > 100 || icon.width > 100) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\treturn true;\n\t\t}\n\n\t\t//\n\t\t// Map Helper Functions\n\t\t//\n\n\t}, {\n\t\tkey: 'createCustomIcon',\n\t\tvalue: function createCustomIcon(iconUrl, iconWidth, iconHeight) {\n\t\t\t// Center the anchor point based the on the icon width\n\t\t\tvar iconAnchor = [iconWidth / 2, iconHeight];\n\n\t\t\treturn L.icon({\n\t\t\t\ticonUrl: iconUrl,\n\t\t\t\ticonAnchor: iconAnchor,\n\t\t\t\ticonSize: [iconWidth, iconHeight]\n\t\t\t});\n\t\t}\n\n\t\t//\n\t\t// Render\n\t\t//\n\n\t}, {\n\t\tkey: 'render',\n\t\tvalue: function render() {\n\t\t\tvar _this2 = this;\n\n\t\t\tvar _props = this.props,\n\t\t\t    attributes = _props.attributes,\n\t\t\t    setAttributes = _props.setAttributes;\n\n\n\t\t\tvar colors = [{ name: 'blue', color: '#67B6E3' }, { name: 'white', color: '#fff' }, { name: 'grey', color: '#A4BAB7' }];\n\n\t\t\tvar styles = {\n\t\t\t\theight: attributes.height + 'px',\n\t\t\t\tbackground: attributes.mapContainerBackground\n\t\t\t};\n\n\t\t\treturn wp.element.createElement(\n\t\t\t\tFragment,\n\t\t\t\tnull,\n\t\t\t\twp.element.createElement(\n\t\t\t\t\tInspectorControls,\n\t\t\t\t\tnull,\n\t\t\t\t\twp.element.createElement(\n\t\t\t\t\t\tPanelBody,\n\t\t\t\t\t\t{ title: __('Leaflet Map Settings') },\n\t\t\t\t\t\twp.element.createElement(RangeControl, {\n\t\t\t\t\t\t\tlabel: __('Height'),\n\t\t\t\t\t\t\tvalue: attributes.height,\n\t\t\t\t\t\t\tonChange: function onChange(value) {\n\t\t\t\t\t\t\t\treturn setAttributes({ height: value });\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tmin: 150,\n\t\t\t\t\t\t\tmax: 800\n\t\t\t\t\t\t}),\n\t\t\t\t\t\twp.element.createElement(RangeControl, {\n\t\t\t\t\t\t\tlabel: __('Default Zoom'),\n\t\t\t\t\t\t\tvalue: attributes.zoom,\n\t\t\t\t\t\t\tonChange: function onChange(value) {\n\t\t\t\t\t\t\t\tif (value > 18 || value < 2) {\n\t\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tsetAttributes({ zoom: value });\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tmin: 2,\n\t\t\t\t\t\t\tmax: 18\n\t\t\t\t\t\t}),\n\t\t\t\t\t\twp.element.createElement(\n\t\t\t\t\t\t\t'p',\n\t\t\t\t\t\t\tnull,\n\t\t\t\t\t\t\t'Map Background'\n\t\t\t\t\t\t),\n\t\t\t\t\t\twp.element.createElement(ColorPalette, {\n\t\t\t\t\t\t\tcolors: colors,\n\t\t\t\t\t\t\tvalue: attributes.mapContainerBackground,\n\t\t\t\t\t\t\tonChange: function onChange(value) {\n\t\t\t\t\t\t\t\tsetAttributes({\n\t\t\t\t\t\t\t\t\tmapContainerBackground: value\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}),\n\t\t\t\t\t\twp.element.createElement(\n\t\t\t\t\t\t\t'h2',\n\t\t\t\t\t\t\tnull,\n\t\t\t\t\t\t\t'Custom Icon'\n\t\t\t\t\t\t),\n\t\t\t\t\t\twp.element.createElement(\n\t\t\t\t\t\t\t'p',\n\t\t\t\t\t\t\tnull,\n\t\t\t\t\t\t\t'.png file, no larger than 100px by 100px'\n\t\t\t\t\t\t),\n\t\t\t\t\t\twp.element.createElement(MediaUpload, {\n\t\t\t\t\t\t\tonSelect: function onSelect(img) {\n\t\t\t\t\t\t\t\tif (!_this2.validateIcon(img)) {\n\t\t\t\t\t\t\t\t\t_this2.showIconError();\n\t\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t_this2.updateIcon(img);\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\ttype: 'image',\n\t\t\t\t\t\t\tvalue: attributes.customIconID,\n\t\t\t\t\t\t\trender: function render(_ref) {\n\t\t\t\t\t\t\t\tvar open = _ref.open;\n\t\t\t\t\t\t\t\treturn wp.element.createElement(\n\t\t\t\t\t\t\t\t\tFragment,\n\t\t\t\t\t\t\t\t\tnull,\n\t\t\t\t\t\t\t\t\t_this2.state.iconError ? wp.element.createElement(\n\t\t\t\t\t\t\t\t\t\tNotice,\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\tclassName: 'glm-notice',\n\t\t\t\t\t\t\t\t\t\t\tstatus: 'error',\n\t\t\t\t\t\t\t\t\t\t\tonRemove: function onRemove() {\n\t\t\t\t\t\t\t\t\t\t\t\treturn _this2.hideIconError();\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\twp.element.createElement(\n\t\t\t\t\t\t\t\t\t\t\t'p',\n\t\t\t\t\t\t\t\t\t\t\tnull,\n\t\t\t\t\t\t\t\t\t\t\t'Invalid Icon'\n\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t) : '',\n\t\t\t\t\t\t\t\t\twp.element.createElement(\n\t\t\t\t\t\t\t\t\t\tButton,\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\tonClick: open,\n\t\t\t\t\t\t\t\t\t\t\tclassName: 'components-button is-button is-default is-large glm-upload-button'\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\tattributes.customIconID ? wp.element.createElement('img', {\n\t\t\t\t\t\t\t\t\t\t\tsrc: attributes.customIconURL,\n\t\t\t\t\t\t\t\t\t\t\talt: 'Icon'\n\t\t\t\t\t\t\t\t\t\t}) : 'upload'\n\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t\tattributes.customIconID ? wp.element.createElement(\n\t\t\t\t\t\t\t\t\t\tButton,\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\tonClick: function onClick() {\n\t\t\t\t\t\t\t\t\t\t\t\t_this2.removeIcon();\n\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\ttitle: 'remove icon'\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\twp.element.createElement(Dashicon, { icon: 'no' })\n\t\t\t\t\t\t\t\t\t) : ''\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t})\n\t\t\t\t\t)\n\t\t\t\t),\n\t\t\t\twp.element.createElement(\n\t\t\t\t\t'div',\n\t\t\t\t\tnull,\n\t\t\t\t\twp.element.createElement(\n\t\t\t\t\t\t'p',\n\t\t\t\t\t\tnull,\n\t\t\t\t\t\tthis.props.attributes.address\n\t\t\t\t\t),\n\t\t\t\t\twp.element.createElement('div', { style: styles, ref: this.mapContainer })\n\t\t\t\t)\n\t\t\t);\n\t\t}\n\n\t\t//\n\t\t// Did Mount\n\t\t//\n\n\t}, {\n\t\tkey: 'componentDidMount',\n\t\tvalue: function componentDidMount() {\n\t\t\tvar _this3 = this;\n\n\t\t\tthis.map = L.map(this.mapContainer.current).setView(this.props.attributes.mapLatLng, this.props.attributes.zoom);\n\n\t\t\tvar markerOptions = {};\n\n\t\t\t// Set up custom marker icon\n\t\t\tif (this.props.attributes.customIconURL) {\n\t\t\t\tmarkerOptions.icon = this.createCustomIcon(this.props.attributes.customIconURL, this.props.attributes.customIconWidth, this.props.attributes.customIconHeight);\n\t\t\t}\n\n\t\t\tthis.marker = L.marker(this.props.attributes.markerLatLng, markerOptions).addTo(this.map);\n\n\t\t\t// Set Tiles\n\t\t\tL.tileLayer('https://api.tiles.mapbox.com/v4/{id}/{z}/{x}/{y}.png?access_token={accessToken}', {\n\t\t\t\tattribution: 'Map data &copy; <a href=\"https://www.openstreetmap.org/\">OpenStreetMap</a> contributors, <a href=\"https://creativecommons.org/licenses/by-sa/2.0/\">CC-BY-SA</a>, Imagery © <a href=\"https://www.mapbox.com/\">Mapbox</a>',\n\t\t\t\tmaxZoom: 18,\n\t\t\t\tminZoom: 2,\n\t\t\t\tid: 'mapbox.streets',\n\t\t\t\taccessToken: this.mapboxApiKey\n\t\t\t}).addTo(this.map);\n\n\t\t\t// Geocoder search box\n\t\t\tL.Control.geocoder({\n\t\t\t\tdefaultMarkGeocode: false\n\t\t\t}).on('markgeocode', function (e) {\n\t\t\t\tvar latlng = [e.geocode.center.lat, e.geocode.center.lng];\n\n\t\t\t\t// Set new view for user\n\t\t\t\t_this3.map.flyTo(latlng);\n\n\t\t\t\t// Save location\n\t\t\t\t_this3.updateLocation(latlng, e.geocode.name);\n\t\t\t}).addTo(this.map);\n\n\t\t\t// Click to set location\n\t\t\tthis.map.on('click', function (e) {\n\t\t\t\tvar latlng = [e.latlng.lat, e.latlng.lng];\n\n\t\t\t\t// Get address name from latlng\n\t\t\t\tL.Control.Geocoder.nominatim().reverse(e.latlng, 18, function (results) {\n\t\t\t\t\t// Update the location\n\t\t\t\t\tif (!results.hasOwnProperty(0)) {\n\t\t\t\t\t\t_this3.updateLocation(latlng, 'unknown');\n\t\t\t\t\t} else {\n\t\t\t\t\t\t_this3.updateLocation(latlng, results[0].name);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t});\n\t\t}\n\n\t\t//\n\t\t// Did Update\n\t\t//\n\n\t}, {\n\t\tkey: 'componentDidUpdate',\n\t\tvalue: function componentDidUpdate(prevProps) {\n\t\t\t// Marker will update when the attribute is updated\n\t\t\tthis.marker.setLatLng(this.props.attributes.markerLatLng);\n\n\t\t\t// Preview zoom level if changed\n\t\t\tif (prevProps.attributes.zoom !== this.props.attributes.zoom) {\n\t\t\t\tthis.map.setZoom(this.props.attributes.zoom);\n\t\t\t}\n\n\t\t\t// Update Icon\n\t\t\tif (prevProps.attributes.customIconID !== this.props.attributes.customIconID) {\n\t\t\t\tvar newIcon = void 0;\n\n\t\t\t\t// Get the new icon if available\n\t\t\t\t// Otherwise get the original icon\n\t\t\t\tif (this.props.attributes.customIconID) {\n\t\t\t\t\tnewIcon = this.createCustomIcon(this.props.attributes.customIconURL, this.props.attributes.customIconWidth, this.props.attributes.customIconHeight);\n\t\t\t\t} else {\n\t\t\t\t\tvar defaultIcon = Object.assign({}, L.Icon.Default.prototype.options);\n\t\t\t\t\tvar mapImages = pluginUrl + '/vendor/images/';\n\n\t\t\t\t\tdefaultIcon.iconUrl = mapImages + defaultIcon.iconUrl;\n\t\t\t\t\tdefaultIcon.iconRetinaUrl = mapImages + defaultIcon.iconRetinaUrl;\n\t\t\t\t\tdefaultIcon.shadowUrl = mapImages + defaultIcon.shadowUrl;\n\n\t\t\t\t\tnewIcon = L.icon(defaultIcon);\n\t\t\t\t}\n\n\t\t\t\tthis.marker.setIcon(newIcon);\n\t\t\t}\n\t\t}\n\t}]);\n\n\treturn mapBlock;\n}(Component);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///1\n");

/***/ }),
/* 2 */
/*!******************************!*\
  !*** ./src/block/style.scss ***!
  \******************************/
/*! dynamic exports provided */
/***/ (function(module, exports) {

eval("// removed by extract-text-webpack-plugin//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMi5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL3NyYy9ibG9jay9zdHlsZS5zY3NzP2ViNmUiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gcmVtb3ZlZCBieSBleHRyYWN0LXRleHQtd2VicGFjay1wbHVnaW5cblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL3NyYy9ibG9jay9zdHlsZS5zY3NzXG4vLyBtb2R1bGUgaWQgPSAyXG4vLyBtb2R1bGUgY2h1bmtzID0gMCJdLCJtYXBwaW5ncyI6IkFBQUEiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///2\n");

/***/ }),
/* 3 */
/*!*******************************!*\
  !*** ./src/block/editor.scss ***!
  \*******************************/
/*! dynamic exports provided */
/***/ (function(module, exports) {

eval("// removed by extract-text-webpack-plugin//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL3NyYy9ibG9jay9lZGl0b3Iuc2Nzcz8xMWI1Il0sInNvdXJjZXNDb250ZW50IjpbIi8vIHJlbW92ZWQgYnkgZXh0cmFjdC10ZXh0LXdlYnBhY2stcGx1Z2luXG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9zcmMvYmxvY2svZWRpdG9yLnNjc3Ncbi8vIG1vZHVsZSBpZCA9IDNcbi8vIG1vZHVsZSBjaHVua3MgPSAwIl0sIm1hcHBpbmdzIjoiQUFBQSIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///3\n");

/***/ }),
/* 4 */
/*!*************************************************************************!*\
  !*** ./node_modules/leaflet-control-geocoder/dist/Control.Geocoder.css ***!
  \*************************************************************************/
/*! dynamic exports provided */
/***/ (function(module, exports) {

eval("// removed by extract-text-webpack-plugin//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNC5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9sZWFmbGV0LWNvbnRyb2wtZ2VvY29kZXIvZGlzdC9Db250cm9sLkdlb2NvZGVyLmNzcz8xZGJiIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIHJlbW92ZWQgYnkgZXh0cmFjdC10ZXh0LXdlYnBhY2stcGx1Z2luXG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9ub2RlX21vZHVsZXMvbGVhZmxldC1jb250cm9sLWdlb2NvZGVyL2Rpc3QvQ29udHJvbC5HZW9jb2Rlci5jc3Ncbi8vIG1vZHVsZSBpZCA9IDRcbi8vIG1vZHVsZSBjaHVua3MgPSAwIl0sIm1hcHBpbmdzIjoiQUFBQSIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///4\n");

/***/ }),
/* 5 */
/*!************************************************************************!*\
  !*** ./node_modules/leaflet-control-geocoder/dist/images/geocoder.png ***!
  \************************************************************************/
/*! dynamic exports provided */
/***/ (function(module, exports, __webpack_require__) {

eval("module.exports = __webpack_require__.p + \"images/geocoder.png\";//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNS5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9sZWFmbGV0LWNvbnRyb2wtZ2VvY29kZXIvZGlzdC9pbWFnZXMvZ2VvY29kZXIucG5nPzdhMmIiXSwic291cmNlc0NvbnRlbnQiOlsibW9kdWxlLmV4cG9ydHMgPSBfX3dlYnBhY2tfcHVibGljX3BhdGhfXyArIFwiaW1hZ2VzL2dlb2NvZGVyLnBuZ1wiO1xuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vbm9kZV9tb2R1bGVzL2xlYWZsZXQtY29udHJvbC1nZW9jb2Rlci9kaXN0L2ltYWdlcy9nZW9jb2Rlci5wbmdcbi8vIG1vZHVsZSBpZCA9IDVcbi8vIG1vZHVsZSBjaHVua3MgPSAwIl0sIm1hcHBpbmdzIjoiQUFBQSIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///5\n");

/***/ }),
/* 6 */
/*!************************************************************************!*\
  !*** ./node_modules/leaflet-control-geocoder/dist/images/throbber.gif ***!
  \************************************************************************/
/*! dynamic exports provided */
/***/ (function(module, exports, __webpack_require__) {

eval("module.exports = __webpack_require__.p + \"images/throbber.gif\";//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNi5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9sZWFmbGV0LWNvbnRyb2wtZ2VvY29kZXIvZGlzdC9pbWFnZXMvdGhyb2JiZXIuZ2lmPzNmZTEiXSwic291cmNlc0NvbnRlbnQiOlsibW9kdWxlLmV4cG9ydHMgPSBfX3dlYnBhY2tfcHVibGljX3BhdGhfXyArIFwiaW1hZ2VzL3Rocm9iYmVyLmdpZlwiO1xuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vbm9kZV9tb2R1bGVzL2xlYWZsZXQtY29udHJvbC1nZW9jb2Rlci9kaXN0L2ltYWdlcy90aHJvYmJlci5naWZcbi8vIG1vZHVsZSBpZCA9IDZcbi8vIG1vZHVsZSBjaHVua3MgPSAwIl0sIm1hcHBpbmdzIjoiQUFBQSIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///6\n");

/***/ }),
/* 7 */
/*!************************************************************************!*\
  !*** ./node_modules/leaflet-control-geocoder/dist/Control.Geocoder.js ***!
  \************************************************************************/
/*! dynamic exports provided */
/***/ (function(module, exports) {

eval("this.L = this.L || {};\nthis.L.Control = this.L.Control || {};\nthis.L.Control.Geocoder = (function (L) {\n'use strict';\n\nL = L && L.hasOwnProperty('default') ? L['default'] : L;\n\nvar lastCallbackId = 0;\n\n// Adapted from handlebars.js\n// https://github.com/wycats/handlebars.js/\nvar badChars = /[&<>\"'`]/g;\nvar possible = /[&<>\"'`]/;\nvar escape = {\n  '&': '&amp;',\n  '<': '&lt;',\n  '>': '&gt;',\n  '\"': '&quot;',\n  \"'\": '&#x27;',\n  '`': '&#x60;'\n};\n\nfunction escapeChar(chr) {\n  return escape[chr];\n}\n\nfunction htmlEscape(string) {\n  if (string == null) {\n    return '';\n  } else if (!string) {\n    return string + '';\n  }\n\n  // Force a string conversion as this will be done by the append regardless and\n  // the regex test will do this transparently behind the scenes, causing issues if\n  // an object's to string has escaped characters in it.\n  string = '' + string;\n\n  if (!possible.test(string)) {\n    return string;\n  }\n  return string.replace(badChars, escapeChar);\n}\n\nfunction jsonp(url, params, callback, context, jsonpParam) {\n  var callbackId = '_l_geocoder_' + lastCallbackId++;\n  params[jsonpParam || 'callback'] = callbackId;\n  window[callbackId] = L.Util.bind(callback, context);\n  var script = document.createElement('script');\n  script.type = 'text/javascript';\n  script.src = url + L.Util.getParamString(params);\n  script.id = callbackId;\n  document.getElementsByTagName('head')[0].appendChild(script);\n}\n\nfunction getJSON(url, params, callback) {\n  var xmlHttp = new XMLHttpRequest();\n  xmlHttp.onreadystatechange = function() {\n    if (xmlHttp.readyState !== 4) {\n      return;\n    }\n    if (xmlHttp.status !== 200 && xmlHttp.status !== 304) {\n      callback('');\n      return;\n    }\n    callback(JSON.parse(xmlHttp.response));\n  };\n  xmlHttp.open('GET', url + L.Util.getParamString(params), true);\n  xmlHttp.setRequestHeader('Accept', 'application/json');\n  xmlHttp.send(null);\n}\n\nfunction template(str, data) {\n  return str.replace(/\\{ *([\\w_]+) *\\}/g, function(str, key) {\n    var value = data[key];\n    if (value === undefined) {\n      value = '';\n    } else if (typeof value === 'function') {\n      value = value(data);\n    }\n    return htmlEscape(value);\n  });\n}\n\nvar Nominatim = {\n  class: L.Class.extend({\n    options: {\n      serviceUrl: 'https://nominatim.openstreetmap.org/',\n      geocodingQueryParams: {},\n      reverseQueryParams: {},\n      htmlTemplate: function(r) {\n        var a = r.address,\n          parts = [];\n        if (a.road || a.building) {\n          parts.push('{building} {road} {house_number}');\n        }\n\n        if (a.city || a.town || a.village || a.hamlet) {\n          parts.push(\n            '<span class=\"' +\n              (parts.length > 0 ? 'leaflet-control-geocoder-address-detail' : '') +\n              '\">{postcode} {city} {town} {village} {hamlet}</span>'\n          );\n        }\n\n        if (a.state || a.country) {\n          parts.push(\n            '<span class=\"' +\n              (parts.length > 0 ? 'leaflet-control-geocoder-address-context' : '') +\n              '\">{state} {country}</span>'\n          );\n        }\n\n        return template(parts.join('<br/>'), a, true);\n      }\n    },\n\n    initialize: function(options) {\n      L.Util.setOptions(this, options);\n    },\n\n    geocode: function(query, cb, context) {\n      getJSON(\n        this.options.serviceUrl + 'search',\n        L.extend(\n          {\n            q: query,\n            limit: 5,\n            format: 'json',\n            addressdetails: 1\n          },\n          this.options.geocodingQueryParams\n        ),\n        L.bind(function(data) {\n          var results = [];\n          for (var i = data.length - 1; i >= 0; i--) {\n            var bbox = data[i].boundingbox;\n            for (var j = 0; j < 4; j++) bbox[j] = parseFloat(bbox[j]);\n            results[i] = {\n              icon: data[i].icon,\n              name: data[i].display_name,\n              html: this.options.htmlTemplate ? this.options.htmlTemplate(data[i]) : undefined,\n              bbox: L.latLngBounds([bbox[0], bbox[2]], [bbox[1], bbox[3]]),\n              center: L.latLng(data[i].lat, data[i].lon),\n              properties: data[i]\n            };\n          }\n          cb.call(context, results);\n        }, this)\n      );\n    },\n\n    reverse: function(location, scale, cb, context) {\n      getJSON(\n        this.options.serviceUrl + 'reverse',\n        L.extend(\n          {\n            lat: location.lat,\n            lon: location.lng,\n            zoom: Math.round(Math.log(scale / 256) / Math.log(2)),\n            addressdetails: 1,\n            format: 'json'\n          },\n          this.options.reverseQueryParams\n        ),\n        L.bind(function(data) {\n          var result = [],\n            loc;\n\n          if (data && data.lat && data.lon) {\n            loc = L.latLng(data.lat, data.lon);\n            result.push({\n              name: data.display_name,\n              html: this.options.htmlTemplate ? this.options.htmlTemplate(data) : undefined,\n              center: loc,\n              bounds: L.latLngBounds(loc, loc),\n              properties: data\n            });\n          }\n\n          cb.call(context, result);\n        }, this)\n      );\n    }\n  }),\n\n  factory: function(options) {\n    return new L.Control.Geocoder.Nominatim(options);\n  }\n};\n\nvar Control = {\n  class: L.Control.extend({\n    options: {\n      showResultIcons: false,\n      collapsed: true,\n      expand: 'touch', // options: touch, click, anythingelse\n      position: 'topright',\n      placeholder: 'Search...',\n      errorMessage: 'Nothing found.',\n      suggestMinLength: 3,\n      suggestTimeout: 250,\n      defaultMarkGeocode: true\n    },\n\n    includes: L.Evented.prototype || L.Mixin.Events,\n\n    initialize: function(options) {\n      L.Util.setOptions(this, options);\n      if (!this.options.geocoder) {\n        this.options.geocoder = new Nominatim.class();\n      }\n\n      this._requestCount = 0;\n    },\n\n    onAdd: function(map) {\n      var className = 'leaflet-control-geocoder',\n        container = L.DomUtil.create('div', className + ' leaflet-bar'),\n        icon = L.DomUtil.create('button', className + '-icon', container),\n        form = (this._form = L.DomUtil.create('div', className + '-form', container)),\n        input;\n\n      this._map = map;\n      this._container = container;\n\n      icon.innerHTML = '&nbsp;';\n      icon.type = 'button';\n\n      input = this._input = L.DomUtil.create('input', '', form);\n      input.type = 'text';\n      input.placeholder = this.options.placeholder;\n\n      this._errorElement = L.DomUtil.create('div', className + '-form-no-error', container);\n      this._errorElement.innerHTML = this.options.errorMessage;\n\n      this._alts = L.DomUtil.create(\n        'ul',\n        className + '-alternatives leaflet-control-geocoder-alternatives-minimized',\n        container\n      );\n      L.DomEvent.disableClickPropagation(this._alts);\n\n      L.DomEvent.addListener(input, 'keydown', this._keydown, this);\n      if (this.options.geocoder.suggest) {\n        L.DomEvent.addListener(input, 'input', this._change, this);\n      }\n      L.DomEvent.addListener(\n        input,\n        'blur',\n        function() {\n          if (this.options.collapsed && !this._preventBlurCollapse) {\n            this._collapse();\n          }\n          this._preventBlurCollapse = false;\n        },\n        this\n      );\n\n      if (this.options.collapsed) {\n        if (this.options.expand === 'click') {\n          L.DomEvent.addListener(\n            container,\n            'click',\n            function(e) {\n              if (e.button === 0 && e.detail !== 2) {\n                this._toggle();\n              }\n            },\n            this\n          );\n        } else if (L.Browser.touch && this.options.expand === 'touch') {\n          L.DomEvent.addListener(\n            container,\n            'touchstart mousedown',\n            function(e) {\n              this._toggle();\n              e.preventDefault(); // mobile: clicking focuses the icon, so UI expands and immediately collapses\n              e.stopPropagation();\n            },\n            this\n          );\n        } else {\n          L.DomEvent.addListener(container, 'mouseover', this._expand, this);\n          L.DomEvent.addListener(container, 'mouseout', this._collapse, this);\n          this._map.on('movestart', this._collapse, this);\n        }\n      } else {\n        this._expand();\n        if (L.Browser.touch) {\n          L.DomEvent.addListener(\n            container,\n            'touchstart',\n            function() {\n              this._geocode();\n            },\n            this\n          );\n        } else {\n          L.DomEvent.addListener(\n            container,\n            'click',\n            function() {\n              this._geocode();\n            },\n            this\n          );\n        }\n      }\n\n      if (this.options.defaultMarkGeocode) {\n        this.on('markgeocode', this.markGeocode, this);\n      }\n\n      this.on(\n        'startgeocode',\n        function() {\n          L.DomUtil.addClass(this._container, 'leaflet-control-geocoder-throbber');\n        },\n        this\n      );\n      this.on(\n        'finishgeocode',\n        function() {\n          L.DomUtil.removeClass(this._container, 'leaflet-control-geocoder-throbber');\n        },\n        this\n      );\n\n      L.DomEvent.disableClickPropagation(container);\n\n      return container;\n    },\n\n    _geocodeResult: function(results, suggest) {\n      if (!suggest && results.length === 1) {\n        this._geocodeResultSelected(results[0]);\n      } else if (results.length > 0) {\n        this._alts.innerHTML = '';\n        this._results = results;\n        L.DomUtil.removeClass(this._alts, 'leaflet-control-geocoder-alternatives-minimized');\n        for (var i = 0; i < results.length; i++) {\n          this._alts.appendChild(this._createAlt(results[i], i));\n        }\n      } else {\n        L.DomUtil.addClass(this._errorElement, 'leaflet-control-geocoder-error');\n      }\n    },\n\n    markGeocode: function(result) {\n      result = result.geocode || result;\n\n      this._map.fitBounds(result.bbox);\n\n      if (this._geocodeMarker) {\n        this._map.removeLayer(this._geocodeMarker);\n      }\n\n      this._geocodeMarker = new L.Marker(result.center)\n        .bindPopup(result.html || result.name)\n        .addTo(this._map)\n        .openPopup();\n\n      return this;\n    },\n\n    _geocode: function(suggest) {\n      var requestCount = ++this._requestCount,\n        mode = suggest ? 'suggest' : 'geocode',\n        eventData = { input: this._input.value };\n\n      this._lastGeocode = this._input.value;\n      if (!suggest) {\n        this._clearResults();\n      }\n\n      this.fire('start' + mode, eventData);\n      this.options.geocoder[mode](\n        this._input.value,\n        function(results) {\n          if (requestCount === this._requestCount) {\n            eventData.results = results;\n            this.fire('finish' + mode, eventData);\n            this._geocodeResult(results, suggest);\n          }\n        },\n        this\n      );\n    },\n\n    _geocodeResultSelected: function(result) {\n      this.fire('markgeocode', { geocode: result });\n    },\n\n    _toggle: function() {\n      if (L.DomUtil.hasClass(this._container, 'leaflet-control-geocoder-expanded')) {\n        this._collapse();\n      } else {\n        this._expand();\n      }\n    },\n\n    _expand: function() {\n      L.DomUtil.addClass(this._container, 'leaflet-control-geocoder-expanded');\n      this._input.select();\n      this.fire('expand');\n    },\n\n    _collapse: function() {\n      L.DomUtil.removeClass(this._container, 'leaflet-control-geocoder-expanded');\n      L.DomUtil.addClass(this._alts, 'leaflet-control-geocoder-alternatives-minimized');\n      L.DomUtil.removeClass(this._errorElement, 'leaflet-control-geocoder-error');\n      this._input.blur(); // mobile: keyboard shouldn't stay expanded\n      this.fire('collapse');\n    },\n\n    _clearResults: function() {\n      L.DomUtil.addClass(this._alts, 'leaflet-control-geocoder-alternatives-minimized');\n      this._selection = null;\n      L.DomUtil.removeClass(this._errorElement, 'leaflet-control-geocoder-error');\n    },\n\n    _createAlt: function(result, index) {\n      var li = L.DomUtil.create('li', ''),\n        a = L.DomUtil.create('a', '', li),\n        icon = this.options.showResultIcons && result.icon ? L.DomUtil.create('img', '', a) : null,\n        text = result.html ? undefined : document.createTextNode(result.name),\n        mouseDownHandler = function mouseDownHandler(e) {\n          // In some browsers, a click will fire on the map if the control is\n          // collapsed directly after mousedown. To work around this, we\n          // wait until the click is completed, and _then_ collapse the\n          // control. Messy, but this is the workaround I could come up with\n          // for #142.\n          this._preventBlurCollapse = true;\n          L.DomEvent.stop(e);\n          this._geocodeResultSelected(result);\n          L.DomEvent.on(\n            li,\n            'click',\n            function() {\n              if (this.options.collapsed) {\n                this._collapse();\n              } else {\n                this._clearResults();\n              }\n            },\n            this\n          );\n        };\n\n      if (icon) {\n        icon.src = result.icon;\n      }\n\n      li.setAttribute('data-result-index', index);\n\n      if (result.html) {\n        a.innerHTML = a.innerHTML + result.html;\n      } else {\n        a.appendChild(text);\n      }\n\n      // Use mousedown and not click, since click will fire _after_ blur,\n      // causing the control to have collapsed and removed the items\n      // before the click can fire.\n      L.DomEvent.addListener(li, 'mousedown touchstart', mouseDownHandler, this);\n\n      return li;\n    },\n\n    _keydown: function(e) {\n      var _this = this,\n        select = function select(dir) {\n          if (_this._selection) {\n            L.DomUtil.removeClass(_this._selection, 'leaflet-control-geocoder-selected');\n            _this._selection = _this._selection[dir > 0 ? 'nextSibling' : 'previousSibling'];\n          }\n          if (!_this._selection) {\n            _this._selection = _this._alts[dir > 0 ? 'firstChild' : 'lastChild'];\n          }\n\n          if (_this._selection) {\n            L.DomUtil.addClass(_this._selection, 'leaflet-control-geocoder-selected');\n          }\n        };\n\n      switch (e.keyCode) {\n        // Escape\n        case 27:\n          if (this.options.collapsed) {\n            this._collapse();\n          }\n          break;\n        // Up\n        case 38:\n          select(-1);\n          break;\n        // Up\n        case 40:\n          select(1);\n          break;\n        // Enter\n        case 13:\n          if (this._selection) {\n            var index = parseInt(this._selection.getAttribute('data-result-index'), 10);\n            this._geocodeResultSelected(this._results[index]);\n            this._clearResults();\n          } else {\n            this._geocode();\n          }\n          break;\n      }\n    },\n    _change: function() {\n      var v = this._input.value;\n      if (v !== this._lastGeocode) {\n        clearTimeout(this._suggestTimeout);\n        if (v.length >= this.options.suggestMinLength) {\n          this._suggestTimeout = setTimeout(\n            L.bind(function() {\n              this._geocode(true);\n            }, this),\n            this.options.suggestTimeout\n          );\n        } else {\n          this._clearResults();\n        }\n      }\n    }\n  }),\n  factory: function(options) {\n    return new L.Control.Geocoder(options);\n  }\n};\n\nvar Bing = {\n  class: L.Class.extend({\n    initialize: function(key) {\n      this.key = key;\n    },\n\n    geocode: function(query, cb, context) {\n      jsonp(\n        'https://dev.virtualearth.net/REST/v1/Locations',\n        {\n          query: query,\n          key: this.key\n        },\n        function(data) {\n          var results = [];\n          if (data.resourceSets.length > 0) {\n            for (var i = data.resourceSets[0].resources.length - 1; i >= 0; i--) {\n              var resource = data.resourceSets[0].resources[i],\n                bbox = resource.bbox;\n              results[i] = {\n                name: resource.name,\n                bbox: L.latLngBounds([bbox[0], bbox[1]], [bbox[2], bbox[3]]),\n                center: L.latLng(resource.point.coordinates)\n              };\n            }\n          }\n          cb.call(context, results);\n        },\n        this,\n        'jsonp'\n      );\n    },\n\n    reverse: function(location, scale, cb, context) {\n      jsonp(\n        '//dev.virtualearth.net/REST/v1/Locations/' + location.lat + ',' + location.lng,\n        {\n          key: this.key\n        },\n        function(data) {\n          var results = [];\n          for (var i = data.resourceSets[0].resources.length - 1; i >= 0; i--) {\n            var resource = data.resourceSets[0].resources[i],\n              bbox = resource.bbox;\n            results[i] = {\n              name: resource.name,\n              bbox: L.latLngBounds([bbox[0], bbox[1]], [bbox[2], bbox[3]]),\n              center: L.latLng(resource.point.coordinates)\n            };\n          }\n          cb.call(context, results);\n        },\n        this,\n        'jsonp'\n      );\n    }\n  }),\n\n  factory: function(key) {\n    return new L.Control.Geocoder.Bing(key);\n  }\n};\n\nvar MapQuest = {\n  class: L.Class.extend({\n    options: {\n      serviceUrl: 'https://www.mapquestapi.com/geocoding/v1'\n    },\n\n    initialize: function(key, options) {\n      // MapQuest seems to provide URI encoded API keys,\n      // so to avoid encoding them twice, we decode them here\n      this._key = decodeURIComponent(key);\n\n      L.Util.setOptions(this, options);\n    },\n\n    _formatName: function() {\n      var r = [],\n        i;\n      for (i = 0; i < arguments.length; i++) {\n        if (arguments[i]) {\n          r.push(arguments[i]);\n        }\n      }\n\n      return r.join(', ');\n    },\n\n    geocode: function(query, cb, context) {\n      getJSON(\n        this.options.serviceUrl + '/address',\n        {\n          key: this._key,\n          location: query,\n          limit: 5,\n          outFormat: 'json'\n        },\n        L.bind(function(data) {\n          var results = [],\n            loc,\n            latLng;\n          if (data.results && data.results[0].locations) {\n            for (var i = data.results[0].locations.length - 1; i >= 0; i--) {\n              loc = data.results[0].locations[i];\n              latLng = L.latLng(loc.latLng);\n              results[i] = {\n                name: this._formatName(loc.street, loc.adminArea4, loc.adminArea3, loc.adminArea1),\n                bbox: L.latLngBounds(latLng, latLng),\n                center: latLng\n              };\n            }\n          }\n\n          cb.call(context, results);\n        }, this)\n      );\n    },\n\n    reverse: function(location, scale, cb, context) {\n      getJSON(\n        this.options.serviceUrl + '/reverse',\n        {\n          key: this._key,\n          location: location.lat + ',' + location.lng,\n          outputFormat: 'json'\n        },\n        L.bind(function(data) {\n          var results = [],\n            loc,\n            latLng;\n          if (data.results && data.results[0].locations) {\n            for (var i = data.results[0].locations.length - 1; i >= 0; i--) {\n              loc = data.results[0].locations[i];\n              latLng = L.latLng(loc.latLng);\n              results[i] = {\n                name: this._formatName(loc.street, loc.adminArea4, loc.adminArea3, loc.adminArea1),\n                bbox: L.latLngBounds(latLng, latLng),\n                center: latLng\n              };\n            }\n          }\n\n          cb.call(context, results);\n        }, this)\n      );\n    }\n  }),\n\n  factory: function(key, options) {\n    return new L.Control.Geocoder.MapQuest(key, options);\n  }\n};\n\nvar Mapbox = {\n  class: L.Class.extend({\n    options: {\n      serviceUrl: 'https://api.tiles.mapbox.com/v4/geocode/mapbox.places-v1/',\n      geocodingQueryParams: {},\n      reverseQueryParams: {}\n    },\n\n    initialize: function(accessToken, options) {\n      L.setOptions(this, options);\n      this.options.geocodingQueryParams.access_token = accessToken;\n      this.options.reverseQueryParams.access_token = accessToken;\n    },\n\n    geocode: function(query, cb, context) {\n      var params = this.options.geocodingQueryParams;\n      if (\n        typeof params.proximity !== 'undefined' &&\n        params.proximity.hasOwnProperty('lat') &&\n        params.proximity.hasOwnProperty('lng')\n      ) {\n        params.proximity = params.proximity.lng + ',' + params.proximity.lat;\n      }\n      getJSON(this.options.serviceUrl + encodeURIComponent(query) + '.json', params, function(\n        data\n      ) {\n        var results = [],\n          loc,\n          latLng,\n          latLngBounds;\n        if (data.features && data.features.length) {\n          for (var i = 0; i <= data.features.length - 1; i++) {\n            loc = data.features[i];\n            latLng = L.latLng(loc.center.reverse());\n            if (loc.hasOwnProperty('bbox')) {\n              latLngBounds = L.latLngBounds(\n                L.latLng(loc.bbox.slice(0, 2).reverse()),\n                L.latLng(loc.bbox.slice(2, 4).reverse())\n              );\n            } else {\n              latLngBounds = L.latLngBounds(latLng, latLng);\n            }\n            results[i] = {\n              name: loc.place_name,\n              bbox: latLngBounds,\n              center: latLng\n            };\n          }\n        }\n\n        cb.call(context, results);\n      });\n    },\n\n    suggest: function(query, cb, context) {\n      return this.geocode(query, cb, context);\n    },\n\n    reverse: function(location, scale, cb, context) {\n      getJSON(\n        this.options.serviceUrl +\n          encodeURIComponent(location.lng) +\n          ',' +\n          encodeURIComponent(location.lat) +\n          '.json',\n        this.options.reverseQueryParams,\n        function(data) {\n          var results = [],\n            loc,\n            latLng,\n            latLngBounds;\n          if (data.features && data.features.length) {\n            for (var i = 0; i <= data.features.length - 1; i++) {\n              loc = data.features[i];\n              latLng = L.latLng(loc.center.reverse());\n              if (loc.hasOwnProperty('bbox')) {\n                latLngBounds = L.latLngBounds(\n                  L.latLng(loc.bbox.slice(0, 2).reverse()),\n                  L.latLng(loc.bbox.slice(2, 4).reverse())\n                );\n              } else {\n                latLngBounds = L.latLngBounds(latLng, latLng);\n              }\n              results[i] = {\n                name: loc.place_name,\n                bbox: latLngBounds,\n                center: latLng\n              };\n            }\n          }\n\n          cb.call(context, results);\n        }\n      );\n    }\n  }),\n\n  factory: function(accessToken, options) {\n    return new L.Control.Geocoder.Mapbox(accessToken, options);\n  }\n};\n\nvar What3Words = {\n  class: L.Class.extend({\n    options: {\n      serviceUrl: 'https://api.what3words.com/v2/'\n    },\n\n    initialize: function(accessToken) {\n      this._accessToken = accessToken;\n    },\n\n    geocode: function(query, cb, context) {\n      //get three words and make a dot based string\n      getJSON(\n        this.options.serviceUrl + 'forward',\n        {\n          key: this._accessToken,\n          addr: query.split(/\\s+/).join('.')\n        },\n        function(data) {\n          var results = [],\n            latLng,\n            latLngBounds;\n          if (data.hasOwnProperty('geometry')) {\n            latLng = L.latLng(data.geometry['lat'], data.geometry['lng']);\n            latLngBounds = L.latLngBounds(latLng, latLng);\n            results[0] = {\n              name: data.words,\n              bbox: latLngBounds,\n              center: latLng\n            };\n          }\n\n          cb.call(context, results);\n        }\n      );\n    },\n\n    suggest: function(query, cb, context) {\n      return this.geocode(query, cb, context);\n    },\n\n    reverse: function(location, scale, cb, context) {\n      getJSON(\n        this.options.serviceUrl + 'reverse',\n        {\n          key: this._accessToken,\n          coords: [location.lat, location.lng].join(',')\n        },\n        function(data) {\n          var results = [],\n            latLng,\n            latLngBounds;\n          if (data.status.status == 200) {\n            latLng = L.latLng(data.geometry['lat'], data.geometry['lng']);\n            latLngBounds = L.latLngBounds(latLng, latLng);\n            results[0] = {\n              name: data.words,\n              bbox: latLngBounds,\n              center: latLng\n            };\n          }\n          cb.call(context, results);\n        }\n      );\n    }\n  }),\n\n  factory: function(accessToken) {\n    return new L.Control.Geocoder.What3Words(accessToken);\n  }\n};\n\nvar Google = {\n  class: L.Class.extend({\n    options: {\n      serviceUrl: 'https://maps.googleapis.com/maps/api/geocode/json',\n      geocodingQueryParams: {},\n      reverseQueryParams: {}\n    },\n\n    initialize: function(key, options) {\n      this._key = key;\n      L.setOptions(this, options);\n      // Backwards compatibility\n      this.options.serviceUrl = this.options.service_url || this.options.serviceUrl;\n    },\n\n    geocode: function(query, cb, context) {\n      var params = {\n        address: query\n      };\n\n      if (this._key && this._key.length) {\n        params.key = this._key;\n      }\n\n      params = L.Util.extend(params, this.options.geocodingQueryParams);\n\n      getJSON(this.options.serviceUrl, params, function(data) {\n        var results = [],\n          loc,\n          latLng,\n          latLngBounds;\n        if (data.results && data.results.length) {\n          for (var i = 0; i <= data.results.length - 1; i++) {\n            loc = data.results[i];\n            latLng = L.latLng(loc.geometry.location);\n            latLngBounds = L.latLngBounds(\n              L.latLng(loc.geometry.viewport.northeast),\n              L.latLng(loc.geometry.viewport.southwest)\n            );\n            results[i] = {\n              name: loc.formatted_address,\n              bbox: latLngBounds,\n              center: latLng,\n              properties: loc.address_components\n            };\n          }\n        }\n\n        cb.call(context, results);\n      });\n    },\n\n    reverse: function(location, scale, cb, context) {\n      var params = {\n        latlng: encodeURIComponent(location.lat) + ',' + encodeURIComponent(location.lng)\n      };\n      params = L.Util.extend(params, this.options.reverseQueryParams);\n      if (this._key && this._key.length) {\n        params.key = this._key;\n      }\n\n      getJSON(this.options.serviceUrl, params, function(data) {\n        var results = [],\n          loc,\n          latLng,\n          latLngBounds;\n        if (data.results && data.results.length) {\n          for (var i = 0; i <= data.results.length - 1; i++) {\n            loc = data.results[i];\n            latLng = L.latLng(loc.geometry.location);\n            latLngBounds = L.latLngBounds(\n              L.latLng(loc.geometry.viewport.northeast),\n              L.latLng(loc.geometry.viewport.southwest)\n            );\n            results[i] = {\n              name: loc.formatted_address,\n              bbox: latLngBounds,\n              center: latLng,\n              properties: loc.address_components\n            };\n          }\n        }\n\n        cb.call(context, results);\n      });\n    }\n  }),\n\n  factory: function(key, options) {\n    return new L.Control.Geocoder.Google(key, options);\n  }\n};\n\nvar Photon = {\n  class: L.Class.extend({\n    options: {\n      serviceUrl: 'https://photon.komoot.de/api/',\n      reverseUrl: 'https://photon.komoot.de/reverse/',\n      nameProperties: ['name', 'street', 'suburb', 'hamlet', 'town', 'city', 'state', 'country']\n    },\n\n    initialize: function(options) {\n      L.setOptions(this, options);\n    },\n\n    geocode: function(query, cb, context) {\n      var params = L.extend(\n        {\n          q: query\n        },\n        this.options.geocodingQueryParams\n      );\n\n      getJSON(\n        this.options.serviceUrl,\n        params,\n        L.bind(function(data) {\n          cb.call(context, this._decodeFeatures(data));\n        }, this)\n      );\n    },\n\n    suggest: function(query, cb, context) {\n      return this.geocode(query, cb, context);\n    },\n\n    reverse: function(latLng, scale, cb, context) {\n      var params = L.extend(\n        {\n          lat: latLng.lat,\n          lon: latLng.lng\n        },\n        this.options.reverseQueryParams\n      );\n\n      getJSON(\n        this.options.reverseUrl,\n        params,\n        L.bind(function(data) {\n          cb.call(context, this._decodeFeatures(data));\n        }, this)\n      );\n    },\n\n    _decodeFeatures: function(data) {\n      var results = [],\n        i,\n        f,\n        c,\n        latLng,\n        extent,\n        bbox;\n\n      if (data && data.features) {\n        for (i = 0; i < data.features.length; i++) {\n          f = data.features[i];\n          c = f.geometry.coordinates;\n          latLng = L.latLng(c[1], c[0]);\n          extent = f.properties.extent;\n\n          if (extent) {\n            bbox = L.latLngBounds([extent[1], extent[0]], [extent[3], extent[2]]);\n          } else {\n            bbox = L.latLngBounds(latLng, latLng);\n          }\n\n          results.push({\n            name: this._deocodeFeatureName(f),\n            html: this.options.htmlTemplate ? this.options.htmlTemplate(f) : undefined,\n            center: latLng,\n            bbox: bbox,\n            properties: f.properties\n          });\n        }\n      }\n\n      return results;\n    },\n\n    _deocodeFeatureName: function(f) {\n      var j, name;\n      for (j = 0; !name && j < this.options.nameProperties.length; j++) {\n        name = f.properties[this.options.nameProperties[j]];\n      }\n\n      return name;\n    }\n  }),\n\n  factory: function(options) {\n    return new L.Control.Geocoder.Photon(options);\n  }\n};\n\nvar Mapzen = {\n  class: L.Class.extend({\n    options: {\n      serviceUrl: 'https://search.mapzen.com/v1',\n      geocodingQueryParams: {},\n      reverseQueryParams: {}\n    },\n\n    initialize: function(apiKey, options) {\n      L.Util.setOptions(this, options);\n      this._apiKey = apiKey;\n      this._lastSuggest = 0;\n    },\n\n    geocode: function(query, cb, context) {\n      var _this = this;\n      getJSON(\n        this.options.serviceUrl + '/search',\n        L.extend(\n          {\n            api_key: this._apiKey,\n            text: query\n          },\n          this.options.geocodingQueryParams\n        ),\n        function(data) {\n          cb.call(context, _this._parseResults(data, 'bbox'));\n        }\n      );\n    },\n\n    suggest: function(query, cb, context) {\n      var _this = this;\n      getJSON(\n        this.options.serviceUrl + '/autocomplete',\n        L.extend(\n          {\n            api_key: this._apiKey,\n            text: query\n          },\n          this.options.geocodingQueryParams\n        ),\n        L.bind(function(data) {\n          if (data.geocoding.timestamp > this._lastSuggest) {\n            this._lastSuggest = data.geocoding.timestamp;\n            cb.call(context, _this._parseResults(data, 'bbox'));\n          }\n        }, this)\n      );\n    },\n\n    reverse: function(location, scale, cb, context) {\n      var _this = this;\n      getJSON(\n        this.options.serviceUrl + '/reverse',\n        L.extend(\n          {\n            api_key: this._apiKey,\n            'point.lat': location.lat,\n            'point.lon': location.lng\n          },\n          this.options.reverseQueryParams\n        ),\n        function(data) {\n          cb.call(context, _this._parseResults(data, 'bounds'));\n        }\n      );\n    },\n\n    _parseResults: function(data, bboxname) {\n      var results = [];\n      L.geoJson(data, {\n        pointToLayer: function(feature, latlng) {\n          return L.circleMarker(latlng);\n        },\n        onEachFeature: function(feature, layer) {\n          var result = {},\n            bbox,\n            center;\n\n          if (layer.getBounds) {\n            bbox = layer.getBounds();\n            center = bbox.getCenter();\n          } else {\n            center = layer.getLatLng();\n            bbox = L.latLngBounds(center, center);\n          }\n\n          result.name = layer.feature.properties.label;\n          result.center = center;\n          result[bboxname] = bbox;\n          result.properties = layer.feature.properties;\n          results.push(result);\n        }\n      });\n      return results;\n    }\n  }),\n\n  factory: function(apiKey, options) {\n    return new L.Control.Geocoder.Mapzen(apiKey, options);\n  }\n};\n\nvar ArcGis = {\n  class: L.Class.extend({\n    options: {\n      service_url: 'http://geocode.arcgis.com/arcgis/rest/services/World/GeocodeServer'\n    },\n\n    initialize: function(accessToken, options) {\n      L.setOptions(this, options);\n      this._accessToken = accessToken;\n    },\n\n    geocode: function(query, cb, context) {\n      var params = {\n        SingleLine: query,\n        outFields: 'Addr_Type',\n        forStorage: false,\n        maxLocations: 10,\n        f: 'json'\n      };\n\n      if (this._key && this._key.length) {\n        params.token = this._key;\n      }\n\n      getJSON(this.options.service_url + '/findAddressCandidates', params, function(data) {\n        var results = [],\n          loc,\n          latLng,\n          latLngBounds;\n\n        if (data.candidates && data.candidates.length) {\n          for (var i = 0; i <= data.candidates.length - 1; i++) {\n            loc = data.candidates[i];\n            latLng = L.latLng(loc.location.y, loc.location.x);\n            latLngBounds = L.latLngBounds(\n              L.latLng(loc.extent.ymax, loc.extent.xmax),\n              L.latLng(loc.extent.ymin, loc.extent.xmin)\n            );\n            results[i] = {\n              name: loc.address,\n              bbox: latLngBounds,\n              center: latLng\n            };\n          }\n        }\n\n        cb.call(context, results);\n      });\n    },\n\n    suggest: function(query, cb, context) {\n      return this.geocode(query, cb, context);\n    },\n\n    reverse: function(location, scale, cb, context) {\n      var params = {\n        location: encodeURIComponent(location.lng) + ',' + encodeURIComponent(location.lat),\n        distance: 100,\n        f: 'json'\n      };\n\n      getJSON(this.options.service_url + '/reverseGeocode', params, function(data) {\n        var result = [],\n          loc;\n\n        if (data && !data.error) {\n          loc = L.latLng(data.location.y, data.location.x);\n          result.push({\n            name: data.address.Match_addr,\n            center: loc,\n            bounds: L.latLngBounds(loc, loc)\n          });\n        }\n\n        cb.call(context, result);\n      });\n    }\n  }),\n\n  factory: function(accessToken, options) {\n    return new L.Control.Geocoder.ArcGis(accessToken, options);\n  }\n};\n\nvar HERE = {\n  class: L.Class.extend({\n    options: {\n      geocodeUrl: 'http://geocoder.api.here.com/6.2/geocode.json',\n      reverseGeocodeUrl: 'http://reverse.geocoder.api.here.com/6.2/reversegeocode.json',\n      app_id: '<insert your app_id here>',\n      app_code: '<insert your app_code here>',\n      geocodingQueryParams: {},\n      reverseQueryParams: {}\n    },\n\n    initialize: function(options) {\n      L.setOptions(this, options);\n    },\n\n    geocode: function(query, cb, context) {\n      var params = {\n        searchtext: query,\n        gen: 9,\n        app_id: this.options.app_id,\n        app_code: this.options.app_code,\n        jsonattributes: 1\n      };\n      params = L.Util.extend(params, this.options.geocodingQueryParams);\n      this.getJSON(this.options.geocodeUrl, params, cb, context);\n    },\n\n    reverse: function(location, scale, cb, context) {\n      var params = {\n        prox: encodeURIComponent(location.lat) + ',' + encodeURIComponent(location.lng),\n        mode: 'retrieveAddresses',\n        app_id: this.options.app_id,\n        app_code: this.options.app_code,\n        gen: 9,\n        jsonattributes: 1\n      };\n      params = L.Util.extend(params, this.options.reverseQueryParams);\n      this.getJSON(this.options.reverseGeocodeUrl, params, cb, context);\n    },\n\n    getJSON: function(url, params, cb, context) {\n      getJSON(url, params, function(data) {\n        var results = [],\n          loc,\n          latLng,\n          latLngBounds;\n        if (data.response.view && data.response.view.length) {\n          for (var i = 0; i <= data.response.view[0].result.length - 1; i++) {\n            loc = data.response.view[0].result[i].location;\n            latLng = L.latLng(loc.displayPosition.latitude, loc.displayPosition.longitude);\n            latLngBounds = L.latLngBounds(\n              L.latLng(loc.mapView.topLeft.latitude, loc.mapView.topLeft.longitude),\n              L.latLng(loc.mapView.bottomRight.latitude, loc.mapView.bottomRight.longitude)\n            );\n            results[i] = {\n              name: loc.address.label,\n              bbox: latLngBounds,\n              center: latLng\n            };\n          }\n        }\n        cb.call(context, results);\n      });\n    }\n  }),\n\n  factory: function(options) {\n    return new L.Control.Geocoder.HERE(options);\n  }\n};\n\nvar Geocoder = L.Util.extend(Control.class, {\n  Nominatim: Nominatim.class,\n  nominatim: Nominatim.factory,\n  Bing: Bing.class,\n  bing: Bing.factory,\n  MapQuest: MapQuest.class,\n  mapQuest: MapQuest.factory,\n  Mapbox: Mapbox.class,\n  mapbox: Mapbox.factory,\n  What3Words: What3Words.class,\n  what3words: What3Words.factory,\n  Google: Google.class,\n  google: Google.factory,\n  Photon: Photon.class,\n  photon: Photon.factory,\n  Mapzen: Mapzen.class,\n  mapzen: Mapzen.factory,\n  ArcGis: ArcGis.class,\n  arcgis: ArcGis.factory,\n  HERE: HERE.class,\n  here: HERE.factory\n});\n\nL.Util.extend(L.Control, {\n  Geocoder: Geocoder,\n  geocoder: Control.factory\n});\n\nreturn Geocoder;\n\n}(L));\n//# sourceMappingURL=Control.Geocoder.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///7\n");

/***/ })
/******/ ]);